version: '3.8'

services:
  app:
    build: .
    container_name: tests_gac
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - db
      - elasticsearch
      - kibana
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev

  app_debug:
    build: .
    container_name: tests_gac
    ports:
      - "3000:3000"
      - "9229:9229"
    env_file:
      - .env
    depends_on:
      - db
      - elasticsearch
    volumes:
      - .:/app
      - /app/node_modules
    command: node --inspect=0.0.0.0:9229 -r ts-node/register -r tsconfig-paths/register src/main.ts

  app-test:
    build: .
    container_name: tests_gac_test
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run test

  db:
    image: postgres:15
    container_name: tests_gac_db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false 
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch


volumes:
  postgres_data:
  elasticsearch_data:
